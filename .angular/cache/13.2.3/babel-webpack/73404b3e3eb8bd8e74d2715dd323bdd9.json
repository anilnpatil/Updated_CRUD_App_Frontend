{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Prathap H G\\\\Desktop\\\\Prathap_Cambro\\\\Updated_CRUD_App_FrontEnd\\\\Updated_CRUD_App_Frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MODALS } from '../home/home.component';\nlet TableContentViewComponent = class TableContentViewComponent {\n  constructor(webApiService, route, httpProvider, modalService) {\n    this.webApiService = webApiService;\n    this.route = route;\n    this.httpProvider = httpProvider;\n    this.modalService = modalService;\n    this.databaseDetail = [];\n    this.tableList = [];\n    this.columnHeaders = [];\n    this.result = [];\n  }\n\n  reload() {\n    this.getTableData();\n  }\n\n  ngOnInit() {\n    this.databaseName = this.route.snapshot.queryParams['table'];\n    this.getTableData();\n  }\n\n  getTableData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.webApiService.get('api/table-data/' + _this.databaseName).subscribe(data => {\n        if (data !== undefined) {\n          console.log(_this.databaseName);\n          console.log(data.body);\n        }\n\n        _this.tableList = data.body; // var tablecols = this.tableList.shift()/;\n\n        console.log(_this.tableList[0]); // Log the keys of the first item in this.tableList\n        // const tableData = Object/.keys(this.tableList[0])\n\n        _this.columnHeaders = Object.keys(_this.tableList[0]); // console.log(this.columnHeaders);\n\n        _this.result = Object.values(_this.tableList[0]);\n        console.log(_this.result); // this.tableList.slice(1).forEach(row => {\n        //   console.log(Object.keys(row));\n        // }\n        // );\n        //       // Assuming you want to log the keys of each row in the tableList\n        //       this.tableList.slice(1).forEach(row => {\n        //         console.log(Object.keys(row));\n        // });\n        // console.log(this.tableList.keys(row))\n      });\n    })();\n  }\n\n  deleteTableConfirmation(tableId) {\n    this.modalService.open(MODALS['deleteModal'], {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {\n      alert(tableId + ' table deleted');\n    }, reason => {});\n  }\n\n};\nTableContentViewComponent = __decorate([Component({\n  selector: 'app-table-content-view',\n  templateUrl: './table-content-view.component.html',\n  styleUrls: ['./table-content-view.component.scss']\n})], TableContentViewComponent);\nexport { TableContentViewComponent }; // export class TableContentViewComponent implements OnInit {\n//   public queryParams: any = {};\n//   public tableData = [\n//     ['Name', 'Age', 'Salary', 'Number'],\n//     ['john', 29, '22500$', '9036'],\n//     ['anil', 29, '22500$', '9036'],\n//     ['john', 57, '22500$', '9036'],\n//     ['john', 29, '87$', '9036'],\n//     ['john', 29, '22500$', '1231231'],\n//   ];\n//   public tablecols = this.tableData.shift();\n//   constructor(public webApiService: WebApiService, private route: ActivatedRoute, private httpProvider: HttpProviderService) {\n//     this.queryParams = this.route.snapshot.queryParams;\n//   }\n//   reload() {\n//   }\n//   ngOnInit(): void {\n//   }\n//   getTableData(){\n//     this.webApiService.get('/api/table-data/{dbName}').subscribe(data =>{\n//       console.log(data)\n//     })\n//   }\n// }","map":{"version":3,"sources":["C:/Users/Prathap H G/Desktop/Prathap_Cambro/Updated_CRUD_App_FrontEnd/Updated_CRUD_App_Frontend/src/app/table-content-view/table-content-view.component.ts"],"names":["__decorate","Component","MODALS","TableContentViewComponent","constructor","webApiService","route","httpProvider","modalService","databaseDetail","tableList","columnHeaders","result","reload","getTableData","ngOnInit","databaseName","snapshot","queryParams","get","subscribe","data","undefined","console","log","body","Object","keys","values","deleteTableConfirmation","tableId","open","ariaLabelledBy","then","alert","reason","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,IAAIC,yBAAyB,GAAG,MAAMA,yBAAN,CAAgC;AAC5DC,EAAAA,WAAW,CAACC,aAAD,EAAgBC,KAAhB,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmD;AAC1D,SAAKH,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,MAAL,GAAc,EAAd;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,SAAKC,YAAL;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,YAAL,GAAoB,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,WAApB,CAAgC,OAAhC,CAApB;AACA,SAAKJ,YAAL;AACH;;AACKA,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,MAAA,KAAI,CAACT,aAAL,CAAmBc,GAAnB,CAAuB,oBAAoB,KAAI,CAACH,YAAhD,EAA8DI,SAA9D,CAAwEC,IAAI,IAAI;AAC5E,YAAIA,IAAI,KAAKC,SAAb,EAAwB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACR,YAAjB;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACH;;AACD,QAAA,KAAI,CAACf,SAAL,GAAiBW,IAAI,CAACI,IAAtB,CAL4E,CAM5E;;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACd,SAAL,CAAe,CAAf,CAAZ,EAP4E,CAQ5E;AACA;;AACA,QAAA,KAAI,CAACC,aAAL,GAAqBe,MAAM,CAACC,IAAP,CAAY,KAAI,CAACjB,SAAL,CAAe,CAAf,CAAZ,CAArB,CAV4E,CAW5E;;AACA,QAAA,KAAI,CAACE,MAAL,GAAcc,MAAM,CAACE,MAAP,CAAc,KAAI,CAAClB,SAAL,CAAe,CAAf,CAAd,CAAd;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACZ,MAAjB,EAb4E,CAc5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAvBD;AADiB;AAyBpB;;AACDiB,EAAAA,uBAAuB,CAACC,OAAD,EAAU;AAC7B,SAAKtB,YAAL,CAAkBuB,IAAlB,CAAuB7B,MAAM,CAAC,aAAD,CAA7B,EAA8C;AAC1C8B,MAAAA,cAAc,EAAE;AAD0B,KAA9C,EAEGpB,MAFH,CAEUqB,IAFV,CAEgBrB,MAAD,IAAY;AACvBsB,MAAAA,KAAK,CAACJ,OAAO,GAAG,gBAAX,CAAL;AACH,KAJD,EAIIK,MAAD,IAAY,CAAG,CAJlB;AAKH;;AAlD2D,CAAhE;AAoDAhC,yBAAyB,GAAGH,UAAU,CAAC,CACnCC,SAAS,CAAC;AACNmC,EAAAA,QAAQ,EAAE,wBADJ;AAENC,EAAAA,WAAW,EAAE,qCAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,qCAAD;AAHL,CAAD,CAD0B,CAAD,EAMnCnC,yBANmC,CAAtC;AAOA,SAASA,yBAAT,G,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { MODALS } from '../home/home.component';\r\nlet TableContentViewComponent = class TableContentViewComponent {\r\n    constructor(webApiService, route, httpProvider, modalService) {\r\n        this.webApiService = webApiService;\r\n        this.route = route;\r\n        this.httpProvider = httpProvider;\r\n        this.modalService = modalService;\r\n        this.databaseDetail = [];\r\n        this.tableList = [];\r\n        this.columnHeaders = [];\r\n        this.result = [];\r\n    }\r\n    reload() {\r\n        this.getTableData();\r\n    }\r\n    ngOnInit() {\r\n        this.databaseName = this.route.snapshot.queryParams['table'];\r\n        this.getTableData();\r\n    }\r\n    async getTableData() {\r\n        this.webApiService.get('api/table-data/' + this.databaseName).subscribe(data => {\r\n            if (data !== undefined) {\r\n                console.log(this.databaseName);\r\n                console.log(data.body);\r\n            }\r\n            this.tableList = data.body;\r\n            // var tablecols = this.tableList.shift()/;\r\n            console.log(this.tableList[0]);\r\n            // Log the keys of the first item in this.tableList\r\n            // const tableData = Object/.keys(this.tableList[0])\r\n            this.columnHeaders = Object.keys(this.tableList[0]);\r\n            // console.log(this.columnHeaders);\r\n            this.result = Object.values(this.tableList[0]);\r\n            console.log(this.result);\r\n            // this.tableList.slice(1).forEach(row => {\r\n            //   console.log(Object.keys(row));\r\n            // }\r\n            // );\r\n            //       // Assuming you want to log the keys of each row in the tableList\r\n            //       this.tableList.slice(1).forEach(row => {\r\n            //         console.log(Object.keys(row));\r\n            // });\r\n            // console.log(this.tableList.keys(row))\r\n        });\r\n    }\r\n    deleteTableConfirmation(tableId) {\r\n        this.modalService.open(MODALS['deleteModal'], {\r\n            ariaLabelledBy: 'modal-basic-title'\r\n        }).result.then((result) => {\r\n            alert(tableId + ' table deleted');\r\n        }, (reason) => { });\r\n    }\r\n};\r\nTableContentViewComponent = __decorate([\r\n    Component({\r\n        selector: 'app-table-content-view',\r\n        templateUrl: './table-content-view.component.html',\r\n        styleUrls: ['./table-content-view.component.scss']\r\n    })\r\n], TableContentViewComponent);\r\nexport { TableContentViewComponent };\r\n// export class TableContentViewComponent implements OnInit {\r\n//   public queryParams: any = {};\r\n//   public tableData = [\r\n//     ['Name', 'Age', 'Salary', 'Number'],\r\n//     ['john', 29, '22500$', '9036'],\r\n//     ['anil', 29, '22500$', '9036'],\r\n//     ['john', 57, '22500$', '9036'],\r\n//     ['john', 29, '87$', '9036'],\r\n//     ['john', 29, '22500$', '1231231'],\r\n//   ];\r\n//   public tablecols = this.tableData.shift();\r\n//   constructor(public webApiService: WebApiService, private route: ActivatedRoute, private httpProvider: HttpProviderService) {\r\n//     this.queryParams = this.route.snapshot.queryParams;\r\n//   }\r\n//   reload() {\r\n//   }\r\n//   ngOnInit(): void {\r\n//   }\r\n//   getTableData(){\r\n//     this.webApiService.get('/api/table-data/{dbName}').subscribe(data =>{\r\n//       console.log(data)\r\n//     })\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}